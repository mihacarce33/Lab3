Create MVC desno Authorization -> Individual
[Key] Unikaten ID
Vo IdentityModels so DbSet{
  public DbSet<Client> clients { get; set; } 
  public DbSet<Movie> movies { get; set; }
}
Enable-Migration
Add-Migration initial
update-database

prae Controller using Entity Framework (Client i Movie)
Vo modelite so prop i virtual ICollection{
public virtual ICollection<Movie> movies { get; set; } - vo Client
i isto vo Movie
kreira konstruktori so new List
}
Posle toa pa Add-Migration ___ime____
update-database

Prae model ClientMovie {
  MovieID, ClientID, movie, lista od klienti
}

vo moviesController {
public ActionResult InsertNewClient(int id)
{
    ClientMovie model = new ClientMovie();
    model.MovieID = id;
    model.movie = db.movies.Find(id);
    model.clients = db.clients.ToList();
    return View(model);
}
}

Views -> Movies (InsertNewClient){
@model MVC_Migrations.Models.ClientMovie
@{
    ViewBag.Title = "InsertNewClient";
}

<h2>Insert new client for the movie: @Model.movie.Name</h2>


@using (Html.BeginForm("InsertClientMovie", "Movies"))
            {
                <div class="form-group">
                    @Html.DropDownListFor(m => m.ClientID, new SelectList(Model.clients, "Id", "Name"),
    new { @class = "form-control" })

                    @Html.HiddenFor(m => m.MovieID)
                </div>
		<div class="form-group">
    <button type="submit" class="btn btn-default">Add client to movie</button>
		</div>
            }
}

vo controlerot pak{
[HttpPost]
public ActionResult InsertClientMovie(ClientMovie model)
{
    var client = db.clients.Find(model.ClientID);
    var movie = db.movies.Find(model.MovieID);
    movie.clients.Add(client);
    db.SaveChanges();
    return View("Index",db.movies.ToList());
}
}







